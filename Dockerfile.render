# Production Dockerfile for Render deployment
FROM python:3.9-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DJANGO_SETTINGS_MODULE=workconnect.settings

# Set work directory
WORKDIR /app

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        postgresql-client \
        build-essential \
        libpq-dev \
        curl \
    && rm -rf /var/lib/apt/lists/*

# Upgrade pip and clear cache
RUN pip install --upgrade pip && pip cache purge

# Copy requirements and install Python dependencies
COPY requirements.txt .

# Install requirements with no cache to ensure fresh install
RUN pip install --no-cache-dir -r requirements.txt

# Explicitly install dj-database-url to ensure it's available
RUN pip install --no-cache-dir dj-database-url==2.3.0

# Copy project
COPY . .

# Create media directory
RUN mkdir -p media

# Make entrypoint script executable
RUN chmod +x entrypoint.sh

# Create a non-root user and change ownership
RUN adduser --disabled-password --gecos '' appuser
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8001

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8001/api/health/ || exit 1

# Use ENTRYPOINT to ensure our script always runs
ENTRYPOINT ["./entrypoint.sh"] 